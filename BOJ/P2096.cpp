#include <iostream>
#include <algorithm>
using namespace std;

int n;
int C[3][3][2];

int main(void)
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);

    cin >> n;
    cin >> C[0][0][0] >> C[0][1][0] >> C[0][2][0];
    C[0][0][1] = C[0][0][0];
    C[0][1][1] = C[0][1][0];
    C[0][2][1] = C[0][2][0];

    for(int i = 1; i < n; i++)
    {
        int n1, n2, n3;
        cin >> n1 >> n2 >> n3;

        C[i%2][0][0] = max(C[(i-1)%2][0][0], C[(i-1)%2][1][0]) + n1;
        C[i%2][0][1] = min(C[(i-1)%2][0][1], C[(i-1)%2][1][1]) + n1;
        C[i%2][1][0] = max({C[(i-1)%2][0][0], C[(i-1)%2][1][0], C[(i-1)%2][2][0]}) + n2;
        C[i%2][1][1] = min({C[(i-1)%2][0][1], C[(i-1)%2][1][1], C[(i-1)%2][2][1]}) + n2;
        C[i%2][2][0] = max(C[(i-1)%2][1][0], C[(i-1)%2][2][0]) + n3;
        C[i%2][2][1] = min(C[(i-1)%2][1][1], C[(i-1)%2][2][1]) + n3;
    }

    cout << max({C[(n-1)%2][0][0], C[(n-1)%2][1][0], C[(n-1)%2][2][0]}) << ' ' << min({C[(n-1)%2][0][1], C[(n-1)%2][1][1], C[(n-1)%2][2][1]}) << '\n';

    return 0;
}